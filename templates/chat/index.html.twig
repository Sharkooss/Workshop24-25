{# templates/chat/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Chat Global{% endblock %}

{% block body %}
<div class="container">
    <h1 class="text-center">Chat Global</h1>

    <div id="chat-box" style="height: 400px; overflow-y: scroll; border: 1px solid #ccc; padding: 10px; background-color: #f7f7f7;">
        {% for message in messages %}
            <div class="message {% if message.sender == app.user %}message-right{% else %}message-left{% endif %}">
                <div class="message-info">
                    <strong>{{ message.sender.getName() }} ({{ message.sender.getPointUsers() }} UniTs)</strong>
                    <small>{{ message.createdAt|date('H:i') }}</small>
                </div>
                <div class="message-bubble">
                    {{ message.content }}
                </div>
            </div>
        {% endfor %}
    </div>

    <div class="mt-3">
        <form id="chat-form">
            <div class="form-group">
                <input type="text" id="chat-message" class="form-control" placeholder="Tapez votre message...">
            </div>
            <button type="submit" class="btn btn-primary mt-2">Envoyer</button>
        </form>
    </div>
</div>

<style>
    .container{
        max-width: 800px;
    }


    #chat-box {
        padding: 15px;
        background-color: #f1f1f1;
        border-radius: 10px;
    }

    .message {
        margin-bottom: 15px;
        display: flex;
        flex-direction: column;
    }

    .message-info {
        font-size: 0.9rem;
        color: #555;
    }

    .message-bubble {
        max-width: 60%;
        padding: 10px 15px;
        border-radius: 15px;
        font-size: 1rem;
        line-height: 1.5;
    }

    .message-left .message-bubble {
        background-color: #e0e0e0;
        border-radius: 15px 15px 15px 0;
        align-self: flex-start;
    }

    .message-right .message-bubble {
        background-color: #007bff;
        color: white;
        border-radius: 15px 15px 0 15px;
        align-self: flex-end;
    }

    .message-right {
        align-items: flex-end;
    }

    .message-left {
        align-items: flex-start;
    }

    form#chat-form {
        display: flex;
        gap: 10px;
        align-items: center;
    }

    #chat-message {
        flex: 1;
    }
</style>

<script>
    function fetchMessages() {
        fetch('/chat/messages')
            .then(response => response.json())
            .then(messages => {
                const chatBox = document.getElementById('chat-box');
                chatBox.innerHTML = '';
                messages.forEach(message => {
                    const messageClass = message.sender === "{{ app.user.getName() }}" ? "message-right" : "message-left";
                    chatBox.innerHTML += `
                        <div class="message ${messageClass}">
                            <div class="message-info">
                                <strong>${message.sender} (${message.units} UniTs)</strong>
                                <small>${message.createdAt}</small>
                            </div>
                            <div class="message-bubble">
                                ${message.content}
                            </div>
                        </div>
                    `;
                });
                chatBox.scrollTop = chatBox.scrollHeight; // Scroll to bottom
            })
            .catch(error => console.error('Erreur:', error));
    }

    document.getElementById('chat-form').addEventListener('submit', function(e) {
        e.preventDefault();

        const message = document.getElementById('chat-message').value;
        fetch('/chat/send', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: `message=${message}`
        })
        .then(response => {
            if (response.ok) {
                document.getElementById('chat-message').value = '';
                fetchMessages(); // Refresh the chat after sending a message
            }
        })
        .catch(error => console.error('Erreur:', error));
    });

    // Refresh the chat every 5 seconds
    setInterval(fetchMessages, 5000);
</script>
{% endblock %}
